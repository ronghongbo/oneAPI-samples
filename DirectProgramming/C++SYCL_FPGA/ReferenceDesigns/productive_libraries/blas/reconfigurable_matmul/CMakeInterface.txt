# This file is to be included into the CMakeLists.txt of a KERNEL supported by the reconfigurable matrix multiplication.
# NOTE: Before including this file, set the KERNEL variable as one of "gemm", "symm", "hemm", "syrk" and "herk".

set(RECONFIGURABLE_MATMUL_DIR ${CMAKE_CURRENT_LIST_DIR})
set(PRECISIONS                "s" "d" "c" "z")

# Create targets, which are interfaces of the same targets of reconfigurable_matmul
file(MAKE_DIRECTORY ${CMAKE_SOURCE_DIR}/bin)
foreach(PRECISION ${PRECISIONS})
    foreach(SIZE "tiny" "large")
        foreach(HW "a10" "s10")
            # Generate OneAPI files
            add_custom_command(OUTPUT  ${RECONFIGURABLE_MATMUL_DIR}/oneapi/${PRECISION}matmul_${SIZE}_${HW}.cpp
                                       ${RECONFIGURABLE_MATMUL_DIR}/oneapi/complex_helper.hpp
                                       ${RECONFIGURABLE_MATMUL_DIR}/oneapi/halide_runtime_etc.h
                                       ${RECONFIGURABLE_MATMUL_DIR}/oneapi/pipe_wrapper.hpp
                               COMMAND make oneapi_${PRECISION}matmul_${SIZE}_${HW}
                               WORKING_DIRECTORY ${RECONFIGURABLE_MATMUL_DIR}/build
                               DEPENDS ${RECONFIGURABLE_MATMUL_DIR}/matrix_multiply.cpp
                                       ${RECONFIGURABLE_MATMUL_DIR}/parameters.h
                               COMMENT "Invoke the make of reconfigurable matmul to generate OneAPI files"
                               VERBATIM)
            add_custom_target(oneapi_${PRECISION}$ENV{KERNEL}_${SIZE}_${HW} DEPENDS ${RECONFIGURABLE_MATMUL_DIR}/oneapi/${PRECISION}matmul_${SIZE}_${HW}.cpp
                                                                                    ${RECONFIGURABLE_MATMUL_DIR}/oneapi/complex_helper.hpp
                                                                                    ${RECONFIGURABLE_MATMUL_DIR}/oneapi/halide_runtime_etc.h
                                                                                    ${RECONFIGURABLE_MATMUL_DIR}/oneapi/pipe_wrapper.hpp)

            # Generate a report
            add_custom_command(OUTPUT  ${RECONFIGURABLE_MATMUL_DIR}/reports/${PRECISION}matmul_${SIZE}_${HW}/report.html
                                       ${RECONFIGURABLE_MATMUL_DIR}/reports/${PRECISION}matmul_${SIZE}_${HW}/resources
                               COMMAND make report_${PRECISION}matmul_${SIZE}_${HW}
                               WORKING_DIRECTORY ${RECONFIGURABLE_MATMUL_DIR}/build
                               COMMENT "Invoke the make of reconfigurable matmul to generate a report"
                               VERBATIM)
            add_custom_target(report_${PRECISION}$ENV{KERNEL}_${SIZE}_${HW} DEPENDS ${RECONFIGURABLE_MATMUL_DIR}/reports/${PRECISION}matmul_${SIZE}_${HW}/report.html
                                                                                    ${RECONFIGURABLE_MATMUL_DIR}/reports/${PRECISION}matmul_${SIZE}_${HW}/resources)

            # Generate an image
            add_custom_command(OUTPUT  ${RECONFIGURABLE_MATMUL_DIR}/bin/${PRECISION}matmul_${SIZE}_${HW}.a
                                       ${RECONFIGURABLE_MATMUL_DIR}/reports/${PRECISION}matmul_${SIZE}_${HW}/acl_quartus_report.txt
                               COMMAND make synthesize_${PRECISION}$ENV{KERNEL}_${SIZE}_${HW}
                               WORKING_DIRECTORY ${RECONFIGURABLE_MATMUL_DIR}/build
                               COMMENT "Invoke the make of reconfigurable matmul to generate an image"
                               VERBATIM)
            add_custom_target(synthesize_${PRECISION}$ENV{KERNEL}_${SIZE}_${HW} DEPENDS ${RECONFIGURABLE_MATMUL_DIR}/bin/${PRECISION}matmul_${SIZE}_${HW}.a)
        endforeach()
    endforeach()
endforeach()

# Create Makefiles, etc. for the reconfigurable matrix multiplication, if not done yet.
if(NOT EXISTS "${RECONFIGURABLE_MATMUL_DIR}/build/CMakeFiles")
    message(STATUS "\n\nConfiguring reconfigurable_matmul")
    execute_process(COMMAND mkdir -p ${RECONFIGURABLE_MATMUL_DIR}/build)
    execute_process(COMMAND cmake ..
                    WORKING_DIRECTORY ${RECONFIGURABLE_MATMUL_DIR}/build)
endif()
message(STATUS "\n")